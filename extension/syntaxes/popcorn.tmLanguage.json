{
  "name": "Popcorn",
  "scopeName": "source.popcorn",
  "fileTypes": ["pop"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.popcorn",
          "match": "//.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.flow.popcorn",
          "match": "\\b(if|else|while|for|return)\\b"
        },
        {
          "name": "keyword.control.pop.popcorn",
          "match": "\\b(pop)\\b"
        },
        {
          "name": "storage.type.function.popcorn",
          "match": "\\b(fn)\\b"
        },
        {
          "name": "storage.type.variable.popcorn",
          "match": "\\b(let)\\b"
        },
        {
          "name": "storage.modifier.const.popcorn",
          "match": "\\b(const)\\b"
        },
        {
          "name": "constant.language.boolean.popcorn",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.popcorn",
          "match": "\\b(null)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.popcorn",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.popcorn",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.popcorn",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        },
        {
          "name": "constant.numeric.integer.popcorn",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.popcorn",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.arithmetic.popcorn",
          "match": "(\\+|\\-|\\*|\\/|%)"
        },
        {
          "name": "keyword.operator.assignment.popcorn",
          "match": "(=)"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.definition.block.popcorn",
          "match": "[{}]"
        },
        {
          "name": "punctuation.definition.array.popcorn",
          "match": "[\\[\\]]"
        },
        {
          "name": "punctuation.definition.parameters.popcorn",
          "match": "[()]"
        },
        {
          "name": "punctuation.separator.comma.popcorn",
          "match": ","
        },
        {
          "name": "punctuation.separator.colon.popcorn",
          "match": ":"
        },
        {
          "name": "punctuation.accessor.dot.popcorn",
          "match": "\\."
        },
        {
          "name": "punctuation.terminator.statement.popcorn",
          "match": ";"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.popcorn",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    }
  }
}
